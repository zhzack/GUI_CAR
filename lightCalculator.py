from cmath import pi
import math


def AngSearchLedPoint(ang):

   

    if 0<ang<=71.28:

        Out=-4.5314*ang+1259

    elif 71.28<ang<=108.72:

        Out=-5.609*ang+1335.8

    elif 108.72<ang<=252.31:

        Out=-4.673*ang+1234.1

    elif 252.31<ang<=257.86:

        Out=-9.9099*ang+2555.4

    elif 257.86<ang<=287.69:

        Out=-5.0955*ang+3068.9

    elif 287.69<ang<=360:

        Out=-4.7573*ang+2971.6

    return Out


Arr_all = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 122, 124, 126, 127, 129, 131, 133, 135, 137, 138, 140, 142, 144, 146, 148, 149, 151, 153, 155, 157, 158, 160, 162, 164, 166, 168, 169, 171, 173, 175, 177, 179, 180, 182, 184, 186, 188, 190, 191, 193, 195, 197, 199, 201, 202, 204, 206, 208, 210, 212, 213, 215, 217, 219, 221, 222, 224, 226, 228, 230, 232, 233, 235, 237, 239, 241, 243, 244, 246, 248, 250, 252, 254, 255, 257, 259, 261, 263, 265, 266, 268, 270, 272, 274, 276, 277, 279, 281, 283, 285, 286, 288, 290, 292, 294, 296, 297, 299, 301, 303, 305, 307, 308, 310, 312, 314, 316, 318, 319, 321, 323, 325, 327, 329, 330, 332, 334, 336, 338, 340, 341, 343, 345, 347, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 652, 654, 656, 658, 660, 662, 663, 665, 667, 669, 671, 673, 675, 676, 678, 680, 682, 684, 686, 688, 690, 691, 693, 695, 697, 699, 701, 703, 704, 706, 708, 710, 712, 714, 716, 718, 719, 721, 723, 725, 727, 729, 731, 732, 734, 736, 738, 740, 742, 744, 746, 747, 749, 751, 753, 755, 757, 759, 760, 762, 764, 766, 768, 770, 772, 774, 775, 777, 779, 781, 783, 785, 787, 788, 790, 792, 794, 796, 798, 800, 802, 803, 805, 807, 809, 811, 813, 815, 817, 818, 820, 822, 824, 826, 828, 830, 831, 833, 835, 837, 839, 841, 843, 845, 846, 848, 850, 852, 854, 856, 858, 859, 861, 863, 865, 867, 869, 871, 873, 874, 876, 878, 880, 882, 884, 886, 887, 889, 891, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171,
           1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1205, 1207, 1209, 1210, 1212, 1214, 1216, 1218, 1220, 1222, 1224, 1225, 1227, 1229, 1231, 1233, 1235, 1237, 1238, 1240, 1242, 1244, 1246, 1248, 1250, 1251, 1253, 1255, 1257, 1259, 1261, 1263, 1264, 1266, 1268, 1270, 1272, 1274, 1276, 1277, 1279, 1281, 1283, 1285, 1287, 1289, 1290, 1292, 1294, 1296, 1298, 1300, 1302, 1303, 1305, 1307, 1309, 1311, 1313, 1315, 1316, 1318, 1320, 1322, 1324, 1326, 1328, 1330, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1344, 1346, 1348, 1350, 1352, 1354, 1356, 1357, 1359, 1361, 1363, 1365, 1367, 1369, 1370, 1372, 1374, 1376, 1378, 1380, 1382, 1383, 1385, 1387, 1389, 1391, 1393, 1395, 1396, 1398, 1400, 1402, 1404, 1406, 1408, 1409, 1411, 1413, 1415, 1417, 1419, 1421, 1422, 1424, 1426, 1428, 1430, 1432, 1434, 1436, 1437, 1439, 1441, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1742, 1744, 1745, 1747, 1749, 1751, 1753, 1755, 1756, 1758, 1760, 1762, 1764, 1766, 1767, 1769, 1771, 1773, 1775, 1777, 1778, 1780, 1782, 1784, 1786, 1787, 1789, 1791, 1793, 1795, 1797, 1798, 1800, 1802, 1804, 1806, 1808, 1809, 1811, 1813, 1815, 1817, 1819, 1820, 1822, 1824, 1826, 1828, 1830, 1831, 1833, 1835, 1837, 1839, 1841, 1842, 1844, 1846, 1848, 1850, 1852, 1853, 1855, 1857, 1859, 1861, 1862, 1864, 1866, 1868, 1870, 1872, 1873, 1875, 1877, 1879, 1881, 1883, 1884, 1886, 1888, 1890, 1892, 1894, 1895, 1897, 1899, 1901, 1903, 1905, 1906, 1908, 1910, 1912, 1914, 1916, 1917, 1919, 1921, 1923, 1925, 1926, 1928, 1930, 1932, 1934, 1936, 1937, 1939, 1941, 1943, 1945, 1947, 1948, 1950, 1952, 1954, 1956, 1958, 1959, 1961, 1963, 1965, 1967, 1969, 1970, 1972, 1974, 1976, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194]

Num_All = len(Arr_all)

MaxLed = Num_All


# calculate light start and end dist

def CalculateStartEnd(dist):

    delta = 80  # led num

    if dist-delta < 0:

        End = dist+delta

        Start = MaxLed+dist-delta

    elif dist+delta > MaxLed:

        Start = dist-delta

        End = dist+delta-MaxLed

    else:

        Start = dist-delta

        End = dist+delta

    return Start, End


def CalculteAngwithCordinate(x, y):

    xx = x-90

    yy = y-205

    ang_rad = math.atan2(yy, xx)

    ang_deg = math.degrees(ang_rad)

    if ang_deg < 0:

        ang_deg = ang_deg+360

    return ang_deg


def CalculateStartEnd(dist):

    delta = 55  # led num

    if dist-delta < 0:

        End = dist+delta

        Start = MaxLed+dist-delta

    elif dist+delta > MaxLed:

        Start = dist-delta

        End = dist+delta-MaxLed

    else:

        Start = dist-delta

        End = dist+delta

    return Start, End

#Dist_hist=60000
def calculate_start_end_input_xy(x, y):

    # input x y
    ang = CalculteAngwithCordinate(x, y)
    Dist = round(AngSearchLedPoint(ang))
    # if abs(Dist-Dist_hist)<=5:
    #     Dist=Dist_hist
    # else:
    #     Dist_hist=Dist
    # cal start and end dist

    Start, End = CalculateStartEnd(Dist)

    # StartNumh_closest_value = min(Arr_all, key=lambda x: abs(x - Start))
    # EndNumh_closest_value = min(Arr_all, key=lambda x: abs(x - End))
    # StartNumh = Arr_all.index(StartNumh_closest_value)
    # EndNumh = Arr_all.index(EndNumh_closest_value)

    StartNumh = Arr_all[Start]
    EndNumh = Arr_all[End]

    return StartNumh, EndNumh


# print(calculate_start_end_input_xy(300, 0))

# X0=29.8

# X0_Mid=70

# X0_up=72

# X0_dn=68

# Y0_up=215

# Y0_dn=255

# X_alis=X0+Y0_dn

# Light_num=144#per 100cm

# Light_len=100#unit cm

# # 144 light of 1m

# Dist_All = 4*X0+2*Y0_up+2*Y0_dn
# perled = 144

# Dist_All=2*X0_up+2*X0_dn+2*Y0_up+2*Y0_dn

# #Num_All=round((2*X0_up+2*X0_dn+2*Y0_up+2*Y0_dn)*Light_num/Light_len)

# '''
# Arr_all=[None]*Num_All

# a1=115;a2=352;a3=650;a4=892;a5=1202;a6=1443;a7=1740;a8=1977

# n = 0

# for i in range(round(Num_All)):

#     if i <= a1 or a2 <= i <= a3 or a4 <= i <= a5 or a6 <= i <= a7 or i >= a8:

#         n = n+1

#     if a1 < i < a2 or a3 < i < a4 or a5 < i < a6 or a7 < i < a8:

#         n = n+1.623

#     Arr_all[i] = round(n)
# '''
# Arr_all=[]

# Arr_all=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,120,122,124,126,127,129,131,133,135,137,138,140,142,144,146,148,149,151,153,155,157,158,160,162,164,166,168,169,171,173,175,177,179,180,182,184,186,188,190,191,193,195,197,199,201,202,204,206,208,210,212,213,215,217,219,221,222,224,226,228,230,232,233,235,237,239,241,243,244,246,248,250,252,254,255,257,259,261,263,265,266,268,270,272,274,276,277,279,281,283,285,286,288,290,292,294,296,297,299,301,303,305,307,308,310,312,314,316,318,319,321,323,325,327,329,330,332,334,336,338,340,341,343,345,347,349,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,652,654,656,658,660,662,663,665,667,669,671,673,675,676,678,680,682,684,686,688,690,691,693,695,697,699,701,703,704,706,708,710,712,714,716,718,719,721,723,725,727,729,731,732,734,736,738,740,742,744,746,747,749,751,753,755,757,759,760,762,764,766,768,770,772,774,775,777,779,781,783,785,787,788,790,792,794,796,798,800,802,803,805,807,809,811,813,815,817,818,820,822,824,826,828,830,831,833,835,837,839,841,843,845,846,848,850,852,854,856,858,859,861,863,865,867,869,871,873,874,876,878,880,882,884,886,887,889,891,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205,1207,1209,1210,1212,1214,1216,1218,1220,1222,1224,1225,1227,1229,1231,1233,1235,1237,1238,1240,1242,1244,1246,1248,1250,1251,1253,1255,1257,1259,1261,1263,1264,1266,1268,1270,1272,1274,1276,1277,1279,1281,1283,1285,1287,1289,1290,1292,1294,1296,1298,1300,1302,1303,1305,1307,1309,1311,1313,1315,1316,1318,1320,1322,1324,1326,1328,1330,1331,1333,1335,1337,1339,1341,1343,1344,1346,1348,1350,1352,1354,1356,1357,1359,1361,1363,1365,1367,1369,1370,1372,1374,1376,1378,1380,1382,1383,1385,1387,1389,1391,1393,1395,1396,1398,1400,1402,1404,1406,1408,1409,1411,1413,1415,1417,1419,1421,1422,1424,1426,1428,1430,1432,1434,1436,1437,1439,1441,1443,1444,1445,1446,1447,1448,1449,1450,1451,1452,1453,1454,1455,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1471,1472,1473,1474,1475,1476,1477,1478,1479,1480,1481,1482,1483,1484,1485,1486,1487,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,1515,1516,1517,1518,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1549,1550,1551,1552,1553,1554,1555,1556,1557,1558,1559,1560,1561,1562,1563,1564,1565,1566,1567,1568,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591,1592,1593,1594,1595,1596,1597,1598,1599,1600,1601,1602,1603,1604,1605,1606,1607,1608,1609,1610,1611,1612,1613,1614,1615,1616,1617,1618,1619,1620,1621,1622,1623,1624,1625,1626,1627,1628,1629,1630,1631,1632,1633,1634,1635,1636,1637,1638,1639,1640,1641,1642,1643,1644,1645,1646,1647,1648,1649,1650,1651,1652,1653,1654,1655,1656,1657,1658,1659,1660,1661,1662,1663,1664,1665,1666,1667,1668,1669,1670,1671,1672,1673,1674,1675,1676,1677,1678,1679,1680,1681,1682,1683,1684,1685,1686,1687,1688,1689,1690,1691,1692,1693,1694,1695,1696,1697,1698,1699,1700,1701,1702,1703,1704,1705,1706,1707,1708,1709,1710,1711,1712,1713,1714,1715,1716,1717,1718,1719,1720,1721,1722,1723,1724,1725,1726,1727,1728,1729,1730,1731,1732,1733,1734,1735,1736,1737,1738,1739,1740,1742,1744,1745,1747,1749,1751,1753,1755,1756,1758,1760,1762,1764,1766,1767,1769,1771,1773,1775,1777,1778,1780,1782,1784,1786,1787,1789,1791,1793,1795,1797,1798,1800,1802,1804,1806,1808,1809,1811,1813,1815,1817,1819,1820,1822,1824,1826,1828,1830,1831,1833,1835,1837,1839,1841,1842,1844,1846,1848,1850,1852,1853,1855,1857,1859,1861,1862,1864,1866,1868,1870,1872,1873,1875,1877,1879,1881,1883,1884,1886,1888,1890,1892,1894,1895,1897,1899,1901,1903,1905,1906,1908,1910,1912,1914,1916,1917,1919,1921,1923,1925,1926,1928,1930,1932,1934,1936,1937,1939,1941,1943,1945,1947,1948,1950,1952,1954,1956,1958,1959,1961,1963,1965,1967,1969,1970,1972,1974,1976,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033,2034,2035,2036,2037,2038,2039,2040,2041,2042,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2071,2072,2073,2074,2075,2076,2077,2078,2079,2080,2081,2082,2083,2084,2085,2086,2087,2088,2089,2090,2091,2092,2093,2094,2095,2096,2097,2098,2099,2100,2101,2102,2103,2104,2105,2106,2107,2108,2109,2110,2111,2112,2113,2114,2115,2116,2117,2118,2119,2120,2121,2122,2123,2124,2125,2126,2127,2128,2129,2130,2131,2132,2133,2134,2135,2136,2137,2138,2139,2140,2141,2142,2143,2144,2145,2146,2147,2148,2149,2150,2151,2152,2153,2154,2155,2156,2157,2158,2159,2160,2161,2162,2163,2164,2165,2166,2167,2168,2169,2170,2171,2172,2173,2174,2175,2176,2177,2178,2179,2180,2181,2182,2183,2184,2185,2186,2187,2188,2189,2190,2191,2192,2193,2194]

# Num_All=len(Arr_all)

# MaxNum=Arr_all[Num_All-1]

# # input cordinate x,y


# def CalculatePoint(x1, y1):
#     #cordinate convert
#     # x1=x1-90
#     # y1=y1-210

#     if x1 == 0:

#         if y1>0:

#             Out=Y0_up+X0+Y0_dn+X0_up

#         else:

#             Out=X0+2*Y0_up+2*Y0_dn+2*X0_up+X0_dn

#     # in section 1: m=y1*n/x1,n=-X0;

#     # y1>0, Out=-X0*y1/x1

#     # y1<0, Out=4*X0+2*(Y0_up+Y0_dn)-X0*y1/x1

#     elif y1>=0 and -Y0_up/X0<y1/x1<=0 and x1<0:

#         Out=-X0_Mid*y1/x1+X_alis

#     # in section 2: m=y1*n/x1,m=Y0_up

#     # Out=Y0_up+X0+Y0_up*x1/y1

#     elif y1>0 and (y1/x1<-Y0_up/X0_up or y1/x1>Y0_up/X0_up):

#         Out=Y0_up+X0_up+Y0_up*x1/y1+X_alis


#     # in section 2: m=y1*n/x1,n=X0

#     # Out=2*(Y0_up+X0)-X0*y1/x1

#     elif x1>0 and -Y0_dn/X0_dn<y1/x1<Y0_up/X0_up:

#         Out=2*(Y0_up+X0_up)-X0_Mid*y1/x1+X_alis


#     # in section 2: m=y1*n/x1,m=-Y0_dn

#     # Out=3*X0+2*Y0_up+Y0_dn-Y0_dn*x1/y1

#     elif y1<0 and (y1/x1<-Y0_dn/X0_dn or y1/x1>Y0_dn/X0_dn):

#         Out=2*X0_up+X0_dn+2*Y0_up+Y0_dn-Y0_dn*x1/y1+X_alis


#     elif y1<0 and 0<y1/x1<Y0_up/X0_dn:

#         Out=2*X0_up+2*X0_dn+2*(Y0_up+Y0_dn)-X0_Mid*y1/x1+X_alis

#     return Out


# # calculate light start and end dist

# def CalculateStartEnd(dist):

#     delta = 40  # unit cm

#     if dist-delta < 0:

#         End = dist+delta

#         Start = Dist_All+dist-delta

#     elif dist+delta > Dist_All:

#         Start = dist-delta

#         End = dist+delta-Dist_All

#     else:

#         Start = dist-delta

#         End = dist+delta

#     return Start, End
